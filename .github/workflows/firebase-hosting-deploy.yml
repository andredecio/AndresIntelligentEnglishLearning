name: Smart Firebase Deploy (Auto Triggered)

on:
  push:
    branches:
      - main # Trigger this workflow automatically on pushes to the 'main' branch

jobs:
  # Job 1: Determine what parts of the code have changed
  # This job will run first and identify if frontend or functions code was modified.
  check_for_changes:
    runs-on: ubuntu-latest
    outputs:
      hosting_changed: ${{ steps.filter.outputs.hosting }} # Output for hosting changes
      functions_changed: ${{ steps.filter.outputs.functions }} # Output for functions changes

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for changed paths
        id: filter # Assign an ID to this step to reference its outputs later
        uses: dorny/paths-filter@v2 # This action makes it easy to detect changes in specific paths
        with:
          filters: |
            hosting:
              - 'public/**'          # Match any file within the 'public' directory
              - 'firebase.json'      # Important for hosting configuration changes
            functions:
              - 'functions/**'       # Match any file within the 'functions' directory.

  # Job 2: Deploy Firebase Hosting (Frontend)
  # This job will only run if 'hosting_changed' is true from the previous job.
  deploy_hosting:
    needs: check_for_changes # This job depends on the 'check_for_changes' job completing successfully
    if: ${{ needs.check_for_changes.outputs.hosting_changed == 'true' }} # Conditional execution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Or the Node.js version your frontend project needs
          cache: 'npm'

      - name: Install Frontend Dependencies
        # Assuming your frontend package.json is in the root of the repo
        run: npm ci

      - name: Build Project
        # Assuming your build command is 'npm run build' and runs from the repo root
        run: npm run build

      - name: Authenticate to Google Cloud for Hosting
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_ENDURING_VICTOR_460703_A2 }}

      - name: Deploy to Firebase Hosting Live
        run: npx firebase-tools deploy --only hosting --project enduring-victor-460703-a2

  # Job 3: Deploy Firebase Functions (Backend)
  # This job will only run if 'functions_changed' is true from the previous job.
  deploy_functions:
    needs: check_for_changes # This job also depends on 'check_for_changes'
    if: ${{ needs.check_for_changes.outputs.functions_changed == 'true' }} # Conditional execution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js for Functions
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Corrected to Node.js 20 based on your functions/package.json
          cache: 'npm'
          cache-dependency-path: 'functions/package-lock.json' # Cache specifically for functions

      - name: Install Firebase CLI
        run: npm install -g firebase-tools # Or add firebase-tools as a devDependency in functions/package.json and use npx

      - name: Install Functions Dependencies
        run: npm install # Install dependencies specific to your functions
        working-directory: functions # Crucial: run command inside 'functions' directory

      - name: Authenticate to Google Cloud for Functions # NEW STEP for proper authentication!
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_ENDURING_VICTOR_460703_A2 }}

      - name: Deploy Firebase Functions
        # With google-github-actions/auth, the firebase-tools CLI will pick up the credentials automatically.
        # No need for --token when using service account authentication via this action.
        run: firebase deploy --only functions --project enduring-victor-460703-a2
        working-directory: functions # Crucial: ensures deployment command runs from 'functions' directory
        env:
          GCLOUD_PROJECT: enduring-victor-460703-a2 # Useful for some Firebase/GCP operations
